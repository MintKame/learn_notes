#include<stdio.h>
#include<stdlib.h>
int main()
{
	int n,m;
	int l=0,r=0;
	long long sum=0;
	//数的和用int放不下
	//l与r：输出谁以及t与m比较的条件，四种组合试一遍最快 
	scanf("%d %d",&n,&m);
	int *z=(int *)malloc(n*sizeof(int));
	for(int i=0;i<n;i++)
	{
		scanf("%d",&z[i]);
		sum+=z[i];
	}
	r=sum/n;
	int t;
	int mid=0;
	while(l<=r)
	{
		t=0;
		mid=(l+r)/2;
		for(int i=0;i<n;i++)
		t+=(z[i]/mid);
		if(t>=m)//可以分的人数多，说明能量不够大 
		l=mid+1;
		else
		r=mid-1;
	}
	printf("%d",r);
	free(z);
	return 0;
}
//你正在玩一款新的游戏，在游戏中你有N个用于给你的战士补充能量的道具和M个战士。这N个道具都有一个能量值，代表该道具能给战士提供的总能量，给战士补充后该值会永久减少，该值为0后该道具就没有用了。例如某道具的能量值为500，如果用它给一个战士补充了300的能量，则该道具的能量值变为200。现在你要带领你的战士们出征了，在出征前你要给这M个战士补充能量。假设初始时每个战士的能量都为0，补充完后所有的战士的能量都一样。如果一个战士在补充能量时只能使用1个道具（1个道具可以给若干个战士补充能量）。现在请你写一段程序来计算一下，你最大能给每个战士补充的能量值是多少？
//输入：
//第一行为2个整数，分别代表N（1<=N<=10000）和M(1<=M<=20000)
//第二行为N个整数，代表这N个道具能提供的能量值（所有能量值大于等于100且小于等于2000000）。
//输出：
//为一个整数，代表你最大能给每个战士补充的能量值。测试数据保证有解。
//
//输入样例
//5 13
//765 506 483 329 492
//输出样例
//164
